<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Falling Spinning Cubes</title>
    <style>
        body {
            margin: 0;
            overflow: hidden;
            background-color: #000;
        }
        #scene {
            width: 100vw;
            height: 100vh;
        }
    </style>
</head>
<body>
    <div id="scene"></div>
    <script src="https://threejs.org/build/three.min.js"></script>
    <script>
        const scene = new THREE.Scene();
        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
        const renderer = new THREE.WebGLRenderer({ antialias: true });
        renderer.setSize(window.innerWidth, window.innerHeight);
        document.getElementById('scene').appendChild(renderer.domElement);

        const textureLoader = new THREE.TextureLoader();
        const stoneTexture = textureLoader.load('textures/stone.jpg');
        const glassMaterial = new THREE.MeshPhysicalMaterial({ color: 0x999999, roughness: 0.1, metalness: 0.9, clearcoat: 1.0, clearcoatRoughness: 0.1, reflectivity: 0.9 });
        const metalMaterial = new THREE.MeshStandardMaterial({ color: 0x555555, metalness: 1.0, roughness: 0.5 });
        const stoneMaterial = new THREE.MeshStandardMaterial({ map: stoneTexture });

        const materials = [glassMaterial, metalMaterial, stoneMaterial];
        const geometry = new THREE.BoxGeometry();

        const cubes = [];
        for (let i = 0; i < 50; i++) {
            const material = materials[Math.floor(Math.random() * materials.length)];
            const cube = new THREE.Mesh(geometry, material);
            cube.position.set(Math.random() * 20 - 10, Math.random() * 20 - 10, Math.random() * 20 - 10);
            cube.rotation.set(Math.random() * Math.PI, Math.random() * Math.PI, Math.random() * Math.PI);
            scene.add(cube);
            cubes.push(cube);
        }

        const light = new THREE.DirectionalLight(0xffffff, 1);
        light.position.set(5, 5, 5).normalize();
        scene.add(light);

        camera.position.z = 30;

        function animate() {
            requestAnimationFrame(animate);
            cubes.forEach(cube => {
                cube.rotation.x += 0.01;
                cube.rotation.y += 0.01;
                cube.position.y -= 0.05;
                if (cube.position.y < -10) {
                    cube.position.y = 10;
                }
            });
            renderer.render(scene, camera);
        }

        animate();
    </script>
</body>
</html>